apiVersion: apps/v1
kind: Deployment
metadata:
  name: obtracking
  namespace: kube-ops
spec:
  replicas: 1
  selector:
    matchLabels:
      name: obtracking
  template:
    metadata:
      labels:
        name: obtracking
    spec:
      containers:
#      - name: obtracking
#        image: stagingacr.azurecr.cn/obtracking:latest
#        args: [/bin/sh, -c, go run service/main.go]
#        env:
#        - name: TZ
#          value: Asia/Shanghai
      - name: api
        image: stagingacr.azurecr.cn/obtracking:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 7878
        envFrom:
        - secretRef:
            name: azure-env
        env:
        - name: TZ
          value: Asia/Shanghai
        volumeMounts:
        - name: data
          mountPath: /data
        - name: data3
          mountPath: /data3
      - name: redis
        image: sameersbn/redis:4.0.9-3
        imagePullPolicy: IfNotPresent
        ports:
        - name: redis
          containerPort: 6379
        volumeMounts:
        - mountPath: /var/lib/redis
          name: data2
        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          timeoutSeconds: 1
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: obtracking-pvc
      - name: data2
        persistentVolumeClaim:
          claimName: obtracking-redis-pvc
      - name: data3
        persistentVolumeClaim:
          claimName: pvc-target-tracking-lan
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: obtracking-pvc
  namespace: kube-ops
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: managed-premium
  resources:
    requests:
      storage: 100Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: obtracking-redis-pvc
  namespace: kube-ops
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: managed-premium
  resources:
    requests:
      storage: 100Gi
---
apiVersion: v1
kind: Service
metadata:
  name: obtracking
  namespace: kube-ops
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 7878
    targetPort: 7878
  selector:
    name: obtracking
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-target-tracking-lan
  namespace: kube-ops
spec:
  accessModes:
  - ReadWriteMany
  storageClassName: azurefile-premium
  resources:
    requests:
      storage: 100Gi