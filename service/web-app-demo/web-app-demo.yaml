apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-app-demo
  namespace: kube-ops
spec:
  replicas: 1
  selector:
    matchLabels:
      name: web-app-demo
  template:
    metadata:
      labels:
        name: web-app-demo
    spec:
      containers:
#      - name: eventhub
#        image: qiuguobin/web-app-demo:latest
#        args: [/bin/sh, -c, go run ./sas/consumer.go]
      - name: web-app-demo
        image: stagingacr.azurecr.cn/web-app-demo:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3001
        envFrom:
        - secretRef:
            name: azure-env
#        env:
#        - name: AZURE_TENANT_ID
#          valueFrom:
#            secretKeyRef:
#              name: azure-env
#              key: AZURE_TENANT_ID
#        - name: AZURE_ENVIRONMENT
#          valueFrom:
#            secretKeyRef:
#              name: azure-env
#              key: AZURE_ENVIRONMENT
#        resources:
#          limits:
#            cpu: 500m
#            memory: "100Gi"
#          requests:
#            cpu: 200m
#            memory: "100Gi"
#        volumeMounts:
#        - name: azure-env
#          mountPath: /etc/azure-env
#      volumes:
#      - name: azure-env
#        secret:
#          secretName: azure-env
---
apiVersion: v1
kind: Service
metadata:
  name: web-app-demo
  namespace: kube-ops
spec:
  type: LoadBalancer
  ports:
  - name: http
    port: 3001
    targetPort: 3001
  selector:
    name: web-app-demo
---
#apiVersion: autoscaling/v1
#kind: HorizontalPodAutoscaler
#metadata:
#  name: web-app-demo
#  namespace: kube-ops
#spec:
#  scaleTargetRef:
#    apiVersion: apps/v1
#    kind: Deployment
#    name: web-app-demo
#  minReplicas: 1
#  maxReplicas: 10
#  targetCPUUtilizationPercentage: 50
---
#apiVersion: v1
#kind: PersistentVolumeClaim
#metadata:
#  name: docker-dind-data
#  namespace: kube-ops
#spec:
#  accessModes:
#  - ReadWriteOnce
#  storageClassName: managed-premium
#  resources:
#    requests:
#      storage: 50Gi
---
#apiVersion: apps/v1
#kind: Deployment
#metadata:
#  name: docker-dind
#  namespace: kube-ops
#  labels:
#    app: docker-dind
#spec:
#  selector:
#    matchLabels:
#      app: docker-dind
#  template:
#    metadata:
#      labels:
#        app: docker-dind
#    spec:
#      containers:
#      - image: docker:dind
#        name: docker-dind
#        args:
#        - --registry-mirror=https://ot2k4d59.mirror.aliyuncs.com/  # 指定一个镜像加速器地址
#        env:
#        - name: DOCKER_DRIVER
#          value: overlay2
#        - name: DOCKER_HOST
#          value: tcp://0.0.0.0:2375
#        - name: DOCKER_TLS_CERTDIR   # 禁用 TLS
#          value: ""
#        volumeMounts:
#        - name: docker-dind-data-vol # 持久化docker根目录
#          mountPath: /var/lib/docker/
#        ports:
#        - name: daemon-port
#          containerPort: 2375
#        securityContext:
#          privileged: true # 需要设置成特权模式
#      volumes:
#      - name: docker-dind-data-vol
#        persistentVolumeClaim:
#          claimName: docker-dind-data
---
#apiVersion: v1
#kind: Service
#metadata:
#  name: docker-dind
#  namespace: kube-ops
#  labels:
#    app: docker-dind
#spec:
#  ports:
#  - port: 2375
#    targetPort: 2375
#  selector:
#    app: docker-dind
