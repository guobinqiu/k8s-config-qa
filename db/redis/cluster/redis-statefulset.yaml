apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-cluster-config
  namespace: kube-ops
  labels:
    app: redis-cluster
data:
  update-node.sh: |
    #!/bin/sh
    REDIS_NODES="/data/nodes.conf"
    sed -i -e "/myself/ s/[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}/${POD_IP}/" ${REDIS_NODES}
    exec "$@"
  redis.conf: |+
    cluster-enabled yes
    cluster-require-full-coverage no
    cluster-node-timeout 15000
    cluster-config-file /data/nodes.conf
    cluster-migration-barrier 1
    appendonly yes
    protected-mode no
  recovery.sh: |
    #!/bin/sh
    i=0
    while true
    do
      ip=$(nslookup redis-cluster-$i.redis-cluster.kube-ops.svc.cluster.local|grep "Address"|awk '{print $3}')
      if [[ $ip != "" ]]; then
        redis-cli cluster meet ${ip} 6379
        let i=i+1
      fi
      if [[ $i -gt 5 ]]; then
        break
      fi
      sleep 1
    done
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-cluster
  namespace: kube-ops
  labels:
    app: redis-cluster
spec:
  serviceName: redis-cluster
  replicas: 6
  selector:
    matchLabels:
      app: redis-cluster
  template:
    metadata:
      labels:
        app: redis-cluster
    spec:
      containers:
      - name: redis
        image: redis:5.0.1-alpine
        ports:
        - containerPort: 6379
          name: client
        - containerPort: 16379
          name: gossip
        command: ["/bin/sh", "-c"]
        args:
          - |
            /conf/update-node.sh
            nohup sh /conf/recovery.sh &
            redis-server /conf/redis.conf
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        volumeMounts:
        - name: conf
          mountPath: /conf
          readOnly: false
        - name: data
          mountPath: /data
          readOnly: false
      volumes:
      - name: conf
        configMap:
          name: redis-cluster-config
          defaultMode: 0755
  volumeClaimTemplates:
  - metadata:
      name: data
      labels:
        app: redis-cluster
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 5Gi