#https://haproxy-ingress.github.io/docs/configuration/keys/
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: http-ingress
  namespace: kube-ops
  annotations:
    kubernetes.io/ingress.class: haproxy
#    haproxy-ingress.github.io/timeout-http-request: 30s
spec:
  rules:
  - host: grafana.azk8s.cn
    http:
      paths:
      - path: /
        pathType: ImplementationSpecific
        backend:
          service:
            name: prometheus-grafana
            port:
              number: 3000
  - host: prometheus.azk8s.cn
    http:
      paths:
      - path: /
        pathType: ImplementationSpecific
        backend:
          service:
            name: prometheus-prometheus-oper-prometheus
            port:
              number: 9090
  - host: gitlab.azk8s.cn
    http:
      paths:
      - path: /
        pathType: ImplementationSpecific
        backend:
          service:
            name: gitlab
            port:
              number: 80
  - host: kibana.azk8s.cn
    http:
      paths:
      - path: /
        pathType: ImplementationSpecific
        backend:
          service:
            name: kibana
            port:
              number: 5601
  - host: jenkins.azk8s.cn
    http:
      paths:
      - path: /
        pathType: ImplementationSpecific
        backend:
          service:
            name: jenkins
            port:
              number: 8080
            number: 7878
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: https-ingress
  namespace: kube-ops
  annotations:
    kubernetes.io/ingress.class: haproxy
    haproxy-ingress.github.io/ssl-redirect: "true"
    haproxy-ingress.github.io/rewrite-target: /
spec:
  tls:
  - hosts:
    - yourdomain
    secretName: tls-secret #kubectl create secret tls tls-secret --key ./cn-cvc-uat.key --cert ./cn-cvc-uat.crt --namespace kube-ops
  rules:
  - host: yourdomain
    http:
      paths:
      - path: /myapp
        pathType: Prefix
        backend:
          service:
            name: myapp
            port:
              number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: myapp-grafana-ingress
  namespace: kube-ops
  annotations:
    kubernetes.io/ingress.class: haproxy
    haproxy-ingress.github.io/ssl-redirect: "true"
    haproxy-ingress.github.io/rewrite-target: /
spec:
  tls:
  - hosts:
    - yourdomain
    secretName: tls-secret
  rules:
  - host: yourdomain
    http:
      paths:
      - path: /myapp/grafana
        pathType: Prefix
        backend:
          service:
            name: myapp-grafana
            port:
              number: 3000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: myapp-prometheus-ingress
  namespace: kube-ops
  annotations:
    kubernetes.io/ingress.class: haproxy
spec:
  tls:
  - hosts:
    - yourdomain
    secretName: tls-secret
  rules:
  - host: yourdomain
    http:
      paths:
      - path: /myapp/prometheus
        pathType: Prefix
        backend:
          service:
            name: myapp-prometheus
            port:
              number: 9090
